name: Publish Release

on:
  workflow_call:

jobs:
  Publish-release:
    runs-on: ubuntu-latest

    env:
      PROJECT_PATH: ./Uruba.Distancias/*.csproj
      PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output

    steps: 
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Fetch all commits
        fetch-depth: 0

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    
    - name: Semantic versioning
      id: versioning
      uses: PaulHatch/semantic-version@v4.0.2
      with:
        tag_prefix: ''
        major_pattern: "break:"
        minor_pattern: "feat:"
        patch_pattern: "fix:"
        format: "${major}.${minor}.${patch}"

    - name: Build Project and Generate Package
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release -p:PackageVersion=${{ steps.versioning.outputs.version }} -o ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
      
    - name: Push Package on NuGet
      run: dotnet nuget push '${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_SERVER }} --skip-duplicate
    
    - name: Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: ${{ steps.versioning.outputs.version }}
        automatic_release_tag: ${{ steps.versioning.outputs.version }}
        prerelease: false